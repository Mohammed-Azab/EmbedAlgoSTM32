
ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000268  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000374  08000374  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000374  08000374  00002004  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000374  08000374  00002004  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000374  08000374  00002004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000374  08000374  00001374  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000378  08000378  00001378  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000004  20000000  0800037c  00002000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000004  08000380  00002004  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000380  00002024  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00002004  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000c27  00000000  00000000  0000202d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000495  00000000  00000000  00002c54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001c0  00000000  00000000  000030f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000139  00000000  00000000  000032b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000152bb  00000000  00000000  000033e9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001d9b  00000000  00000000  000186a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007b2d2  00000000  00000000  0001a43f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00095711  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000528  00000000  00000000  00095754  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000056  00000000  00000000  00095c7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000004 	.word	0x20000004
 8000128:	00000000 	.word	0x00000000
 800012c:	0800035c 	.word	0x0800035c

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000008 	.word	0x20000008
 8000148:	0800035c 	.word	0x0800035c

0800014c <main>:

void configureIO();
void enableClk();


int main(void){
 800014c:	b580      	push	{r7, lr}
 800014e:	af00      	add	r7, sp, #0
	enableClk();
 8000150:	f000 f85c 	bl	800020c <enableClk>
	configureIO();
 8000154:	f000 f840 	bl	80001d8 <configureIO>



	while (1) {

		GPIOB -> ODR |= (1 << 13);
 8000158:	4b1e      	ldr	r3, [pc, #120]	@ (80001d4 <main+0x88>)
 800015a:	68db      	ldr	r3, [r3, #12]
 800015c:	4a1d      	ldr	r2, [pc, #116]	@ (80001d4 <main+0x88>)
 800015e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000162:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 9);
 8000164:	4b1b      	ldr	r3, [pc, #108]	@ (80001d4 <main+0x88>)
 8000166:	68db      	ldr	r3, [r3, #12]
 8000168:	4a1a      	ldr	r2, [pc, #104]	@ (80001d4 <main+0x88>)
 800016a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800016e:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 8);
 8000170:	4b18      	ldr	r3, [pc, #96]	@ (80001d4 <main+0x88>)
 8000172:	68db      	ldr	r3, [r3, #12]
 8000174:	4a17      	ldr	r2, [pc, #92]	@ (80001d4 <main+0x88>)
 8000176:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800017a:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 6);
 800017c:	4b15      	ldr	r3, [pc, #84]	@ (80001d4 <main+0x88>)
 800017e:	68db      	ldr	r3, [r3, #12]
 8000180:	4a14      	ldr	r2, [pc, #80]	@ (80001d4 <main+0x88>)
 8000182:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000186:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 15);
 8000188:	4b12      	ldr	r3, [pc, #72]	@ (80001d4 <main+0x88>)
 800018a:	68db      	ldr	r3, [r3, #12]
 800018c:	4a11      	ldr	r2, [pc, #68]	@ (80001d4 <main+0x88>)
 800018e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000192:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 12);
 8000194:	4b0f      	ldr	r3, [pc, #60]	@ (80001d4 <main+0x88>)
 8000196:	68db      	ldr	r3, [r3, #12]
 8000198:	4a0e      	ldr	r2, [pc, #56]	@ (80001d4 <main+0x88>)
 800019a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800019e:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 0);
 80001a0:	4b0c      	ldr	r3, [pc, #48]	@ (80001d4 <main+0x88>)
 80001a2:	68db      	ldr	r3, [r3, #12]
 80001a4:	4a0b      	ldr	r2, [pc, #44]	@ (80001d4 <main+0x88>)
 80001a6:	f043 0301 	orr.w	r3, r3, #1
 80001aa:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 7);
 80001ac:	4b09      	ldr	r3, [pc, #36]	@ (80001d4 <main+0x88>)
 80001ae:	68db      	ldr	r3, [r3, #12]
 80001b0:	4a08      	ldr	r2, [pc, #32]	@ (80001d4 <main+0x88>)
 80001b2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80001b6:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 10);
 80001b8:	4b06      	ldr	r3, [pc, #24]	@ (80001d4 <main+0x88>)
 80001ba:	68db      	ldr	r3, [r3, #12]
 80001bc:	4a05      	ldr	r2, [pc, #20]	@ (80001d4 <main+0x88>)
 80001be:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80001c2:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 11);
 80001c4:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <main+0x88>)
 80001c6:	68db      	ldr	r3, [r3, #12]
 80001c8:	4a02      	ldr	r2, [pc, #8]	@ (80001d4 <main+0x88>)
 80001ca:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80001ce:	60d3      	str	r3, [r2, #12]
		GPIOB -> ODR |= (1 << 13);
 80001d0:	bf00      	nop
 80001d2:	e7c1      	b.n	8000158 <main+0xc>
 80001d4:	40010c00 	.word	0x40010c00

080001d8 <configureIO>:

}



void configureIO(){
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
	 *
	 * B => B0 B6 B7 B8 B9 B10 B11 B12 B13 B15
	 *
	 * */

	GPIOA -> CRL = 0x44444448;  // A0 input
 80001dc:	4b06      	ldr	r3, [pc, #24]	@ (80001f8 <configureIO+0x20>)
 80001de:	4a07      	ldr	r2, [pc, #28]	@ (80001fc <configureIO+0x24>)
 80001e0:	601a      	str	r2, [r3, #0]
	GPIOB -> CRL = 0x22444442;  // B0 B6 B7 output 8MHz
 80001e2:	4b07      	ldr	r3, [pc, #28]	@ (8000200 <configureIO+0x28>)
 80001e4:	4a07      	ldr	r2, [pc, #28]	@ (8000204 <configureIO+0x2c>)
 80001e6:	601a      	str	r2, [r3, #0]
	GPIOB -> CRH = 0x24222222;  // B8 B9 B10 B11 B12 B13 B15 output 8MHz
 80001e8:	4b05      	ldr	r3, [pc, #20]	@ (8000200 <configureIO+0x28>)
 80001ea:	4a07      	ldr	r2, [pc, #28]	@ (8000208 <configureIO+0x30>)
 80001ec:	605a      	str	r2, [r3, #4]

}
 80001ee:	bf00      	nop
 80001f0:	46bd      	mov	sp, r7
 80001f2:	bc80      	pop	{r7}
 80001f4:	4770      	bx	lr
 80001f6:	bf00      	nop
 80001f8:	40010800 	.word	0x40010800
 80001fc:	44444448 	.word	0x44444448
 8000200:	40010c00 	.word	0x40010c00
 8000204:	22444442 	.word	0x22444442
 8000208:	24222222 	.word	0x24222222

0800020c <enableClk>:

void enableClk(){
 800020c:	b480      	push	{r7}
 800020e:	af00      	add	r7, sp, #0
	RCC -> APB2ENR |= RCC_APB2ENR_IOPAEN;
 8000210:	4b0a      	ldr	r3, [pc, #40]	@ (800023c <enableClk+0x30>)
 8000212:	699b      	ldr	r3, [r3, #24]
 8000214:	4a09      	ldr	r2, [pc, #36]	@ (800023c <enableClk+0x30>)
 8000216:	f043 0304 	orr.w	r3, r3, #4
 800021a:	6193      	str	r3, [r2, #24]
	RCC -> APB2ENR |= RCC_APB2ENR_IOPBEN;
 800021c:	4b07      	ldr	r3, [pc, #28]	@ (800023c <enableClk+0x30>)
 800021e:	699b      	ldr	r3, [r3, #24]
 8000220:	4a06      	ldr	r2, [pc, #24]	@ (800023c <enableClk+0x30>)
 8000222:	f043 0308 	orr.w	r3, r3, #8
 8000226:	6193      	str	r3, [r2, #24]
	RCC -> APB2ENR |= (1 << 9); // enable clk for ADC1
 8000228:	4b04      	ldr	r3, [pc, #16]	@ (800023c <enableClk+0x30>)
 800022a:	699b      	ldr	r3, [r3, #24]
 800022c:	4a03      	ldr	r2, [pc, #12]	@ (800023c <enableClk+0x30>)
 800022e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000232:	6193      	str	r3, [r2, #24]
}
 8000234:	bf00      	nop
 8000236:	46bd      	mov	sp, r7
 8000238:	bc80      	pop	{r7}
 800023a:	4770      	bx	lr
 800023c:	40021000 	.word	0x40021000

08000240 <NMI_Handler>:
 8000240:	b480      	push	{r7}
 8000242:	af00      	add	r7, sp, #0
 8000244:	bf00      	nop
 8000246:	e7fd      	b.n	8000244 <NMI_Handler+0x4>

08000248 <HardFault_Handler>:
 8000248:	b480      	push	{r7}
 800024a:	af00      	add	r7, sp, #0
 800024c:	bf00      	nop
 800024e:	e7fd      	b.n	800024c <HardFault_Handler+0x4>

08000250 <MemManage_Handler>:
 8000250:	b480      	push	{r7}
 8000252:	af00      	add	r7, sp, #0
 8000254:	bf00      	nop
 8000256:	e7fd      	b.n	8000254 <MemManage_Handler+0x4>

08000258 <BusFault_Handler>:
 8000258:	b480      	push	{r7}
 800025a:	af00      	add	r7, sp, #0
 800025c:	bf00      	nop
 800025e:	e7fd      	b.n	800025c <BusFault_Handler+0x4>

08000260 <UsageFault_Handler>:
 8000260:	b480      	push	{r7}
 8000262:	af00      	add	r7, sp, #0
 8000264:	bf00      	nop
 8000266:	e7fd      	b.n	8000264 <UsageFault_Handler+0x4>

08000268 <SVC_Handler>:
 8000268:	b480      	push	{r7}
 800026a:	af00      	add	r7, sp, #0
 800026c:	bf00      	nop
 800026e:	46bd      	mov	sp, r7
 8000270:	bc80      	pop	{r7}
 8000272:	4770      	bx	lr

08000274 <DebugMon_Handler>:
 8000274:	b480      	push	{r7}
 8000276:	af00      	add	r7, sp, #0
 8000278:	bf00      	nop
 800027a:	46bd      	mov	sp, r7
 800027c:	bc80      	pop	{r7}
 800027e:	4770      	bx	lr

08000280 <PendSV_Handler>:
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
 8000284:	bf00      	nop
 8000286:	46bd      	mov	sp, r7
 8000288:	bc80      	pop	{r7}
 800028a:	4770      	bx	lr

0800028c <SysTick_Handler>:
 800028c:	b580      	push	{r7, lr}
 800028e:	af00      	add	r7, sp, #0
 8000290:	f000 f82e 	bl	80002f0 <HAL_IncTick>
 8000294:	bf00      	nop
 8000296:	bd80      	pop	{r7, pc}

08000298 <SystemInit>:
 8000298:	b480      	push	{r7}
 800029a:	af00      	add	r7, sp, #0
 800029c:	bf00      	nop
 800029e:	46bd      	mov	sp, r7
 80002a0:	bc80      	pop	{r7}
 80002a2:	4770      	bx	lr

080002a4 <Reset_Handler>:
 80002a4:	f7ff fff8 	bl	8000298 <SystemInit>
 80002a8:	480b      	ldr	r0, [pc, #44]	@ (80002d8 <LoopFillZerobss+0xe>)
 80002aa:	490c      	ldr	r1, [pc, #48]	@ (80002dc <LoopFillZerobss+0x12>)
 80002ac:	4a0c      	ldr	r2, [pc, #48]	@ (80002e0 <LoopFillZerobss+0x16>)
 80002ae:	2300      	movs	r3, #0
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:
 80002b2:	58d4      	ldr	r4, [r2, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:
 80002b8:	18c4      	adds	r4, r0, r3
 80002ba:	428c      	cmp	r4, r1
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>
 80002be:	4a09      	ldr	r2, [pc, #36]	@ (80002e4 <LoopFillZerobss+0x1a>)
 80002c0:	4c09      	ldr	r4, [pc, #36]	@ (80002e8 <LoopFillZerobss+0x1e>)
 80002c2:	2300      	movs	r3, #0
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:
 80002c6:	6013      	str	r3, [r2, #0]
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:
 80002ca:	42a2      	cmp	r2, r4
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>
 80002ce:	f000 f821 	bl	8000314 <__libc_init_array>
 80002d2:	f7ff ff3b 	bl	800014c <main>
 80002d6:	4770      	bx	lr
 80002d8:	20000000 	.word	0x20000000
 80002dc:	20000004 	.word	0x20000004
 80002e0:	0800037c 	.word	0x0800037c
 80002e4:	20000004 	.word	0x20000004
 80002e8:	20000024 	.word	0x20000024

080002ec <ADC1_2_IRQHandler>:
 80002ec:	e7fe      	b.n	80002ec <ADC1_2_IRQHandler>
	...

080002f0 <HAL_IncTick>:
 80002f0:	b480      	push	{r7}
 80002f2:	af00      	add	r7, sp, #0
 80002f4:	4b05      	ldr	r3, [pc, #20]	@ (800030c <HAL_IncTick+0x1c>)
 80002f6:	781b      	ldrb	r3, [r3, #0]
 80002f8:	461a      	mov	r2, r3
 80002fa:	4b05      	ldr	r3, [pc, #20]	@ (8000310 <HAL_IncTick+0x20>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	4413      	add	r3, r2
 8000300:	4a03      	ldr	r2, [pc, #12]	@ (8000310 <HAL_IncTick+0x20>)
 8000302:	6013      	str	r3, [r2, #0]
 8000304:	bf00      	nop
 8000306:	46bd      	mov	sp, r7
 8000308:	bc80      	pop	{r7}
 800030a:	4770      	bx	lr
 800030c:	20000000 	.word	0x20000000
 8000310:	20000020 	.word	0x20000020

08000314 <__libc_init_array>:
 8000314:	b570      	push	{r4, r5, r6, lr}
 8000316:	2600      	movs	r6, #0
 8000318:	4d0c      	ldr	r5, [pc, #48]	@ (800034c <__libc_init_array+0x38>)
 800031a:	4c0d      	ldr	r4, [pc, #52]	@ (8000350 <__libc_init_array+0x3c>)
 800031c:	1b64      	subs	r4, r4, r5
 800031e:	10a4      	asrs	r4, r4, #2
 8000320:	42a6      	cmp	r6, r4
 8000322:	d109      	bne.n	8000338 <__libc_init_array+0x24>
 8000324:	f000 f81a 	bl	800035c <_init>
 8000328:	2600      	movs	r6, #0
 800032a:	4d0a      	ldr	r5, [pc, #40]	@ (8000354 <__libc_init_array+0x40>)
 800032c:	4c0a      	ldr	r4, [pc, #40]	@ (8000358 <__libc_init_array+0x44>)
 800032e:	1b64      	subs	r4, r4, r5
 8000330:	10a4      	asrs	r4, r4, #2
 8000332:	42a6      	cmp	r6, r4
 8000334:	d105      	bne.n	8000342 <__libc_init_array+0x2e>
 8000336:	bd70      	pop	{r4, r5, r6, pc}
 8000338:	f855 3b04 	ldr.w	r3, [r5], #4
 800033c:	4798      	blx	r3
 800033e:	3601      	adds	r6, #1
 8000340:	e7ee      	b.n	8000320 <__libc_init_array+0xc>
 8000342:	f855 3b04 	ldr.w	r3, [r5], #4
 8000346:	4798      	blx	r3
 8000348:	3601      	adds	r6, #1
 800034a:	e7f2      	b.n	8000332 <__libc_init_array+0x1e>
 800034c:	08000374 	.word	0x08000374
 8000350:	08000374 	.word	0x08000374
 8000354:	08000374 	.word	0x08000374
 8000358:	08000378 	.word	0x08000378

0800035c <_init>:
 800035c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800035e:	bf00      	nop
 8000360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000362:	bc08      	pop	{r3}
 8000364:	469e      	mov	lr, r3
 8000366:	4770      	bx	lr

08000368 <_fini>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr
