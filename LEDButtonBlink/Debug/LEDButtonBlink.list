
LEDButtonBlink.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000580  0800010c  0800010c  0000110c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800068c  0800068c  0000200c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800068c  0800068c  0000200c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800068c  0800068c  0000200c  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800068c  0800068c  0000200c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800068c  0800068c  0000168c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000690  08000690  00001690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08000694  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  2000000c  080006a0  0000200c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000002c  080006a0  0000202c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000018e9  00000000  00000000  00002035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000914  00000000  00000000  0000391e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002f0  00000000  00000000  00004238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000212  00000000  00000000  00004528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000155f8  00000000  00000000  0000473a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002ed2  00000000  00000000  00019d32  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007b64e  00000000  00000000  0001cc04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00098252  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000009cc  00000000  00000000  00098298  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  00098c64  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	@ (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	@ (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	@ (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	2000000c 	.word	0x2000000c
 8000128:	00000000 	.word	0x00000000
 800012c:	08000674 	.word	0x08000674

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	@ (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	@ (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	@ (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000010 	.word	0x20000010
 8000148:	08000674 	.word	0x08000674

0800014c <main>:
void enableClk();
void light(char i);



int main(void){
 800014c:	b580      	push	{r7, lr}
 800014e:	b082      	sub	sp, #8
 8000150:	af00      	add	r7, sp, #0
	HAL_Init();
 8000152:	f000 f901 	bl	8000358 <HAL_Init>
	enableClk();
 8000156:	f000 f851 	bl	80001fc <enableClk>
	configureIO();
 800015a:	f000 f835 	bl	80001c8 <configureIO>
	_Bool pressed = false;
 800015e:	2300      	movs	r3, #0
 8000160:	71fb      	strb	r3, [r7, #7]
	//GPIOA->ODR &= ~(0x03); // clear output

	char c = 1;
 8000162:	2301      	movs	r3, #1
 8000164:	71bb      	strb	r3, [r7, #6]


	while (1) {

	  if (GPIOB -> IDR & (1 << 10)){
 8000166:	4b17      	ldr	r3, [pc, #92]	@ (80001c4 <main+0x78>)
 8000168:	689b      	ldr	r3, [r3, #8]
 800016a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800016e:	2b00      	cmp	r3, #0
 8000170:	d00b      	beq.n	800018a <main+0x3e>
		  HAL_Delay(50);
 8000172:	2032      	movs	r0, #50	@ 0x32
 8000174:	f000 f952 	bl	800041c <HAL_Delay>
		  while (GPIOB -> IDR & (1 << 10));
 8000178:	bf00      	nop
 800017a:	4b12      	ldr	r3, [pc, #72]	@ (80001c4 <main+0x78>)
 800017c:	689b      	ldr	r3, [r3, #8]
 800017e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000182:	2b00      	cmp	r3, #0
 8000184:	d1f9      	bne.n	800017a <main+0x2e>
		  pressed = true;
 8000186:	2301      	movs	r3, #1
 8000188:	71fb      	strb	r3, [r7, #7]
	  }


	  if (c<=5 && pressed){
 800018a:	79bb      	ldrb	r3, [r7, #6]
 800018c:	2b05      	cmp	r3, #5
 800018e:	d80e      	bhi.n	80001ae <main+0x62>
 8000190:	79fb      	ldrb	r3, [r7, #7]
 8000192:	2b00      	cmp	r3, #0
 8000194:	d00b      	beq.n	80001ae <main+0x62>
		  	  pressed = false;
 8000196:	2300      	movs	r3, #0
 8000198:	71fb      	strb	r3, [r7, #7]
		  	  if (c==1)
 800019a:	79bb      	ldrb	r3, [r7, #6]
 800019c:	2b01      	cmp	r3, #1
 800019e:	d102      	bne.n	80001a6 <main+0x5a>
		  		  light(1);
 80001a0:	2001      	movs	r0, #1
 80001a2:	f000 f83f 	bl	8000224 <light>
		  	  c++;
 80001a6:	79bb      	ldrb	r3, [r7, #6]
 80001a8:	3301      	adds	r3, #1
 80001aa:	71bb      	strb	r3, [r7, #6]
 80001ac:	e008      	b.n	80001c0 <main+0x74>
	  }

	  else if (c == 6){
 80001ae:	79bb      	ldrb	r3, [r7, #6]
 80001b0:	2b06      	cmp	r3, #6
 80001b2:	d1d8      	bne.n	8000166 <main+0x1a>
		  	  c++;
 80001b4:	79bb      	ldrb	r3, [r7, #6]
 80001b6:	3301      	adds	r3, #1
 80001b8:	71bb      	strb	r3, [r7, #6]
		  	  light(2);
 80001ba:	2002      	movs	r0, #2
 80001bc:	f000 f832 	bl	8000224 <light>
	  if (GPIOB -> IDR & (1 << 10)){
 80001c0:	e7d1      	b.n	8000166 <main+0x1a>
 80001c2:	bf00      	nop
 80001c4:	40010c00 	.word	0x40010c00

080001c8 <configureIO>:

}



void configureIO(){
 80001c8:	b480      	push	{r7}
 80001ca:	af00      	add	r7, sp, #0

	GPIOA -> CRL = 0x44444422; //output 2 MHz A0,A1
 80001cc:	4b07      	ldr	r3, [pc, #28]	@ (80001ec <configureIO+0x24>)
 80001ce:	4a08      	ldr	r2, [pc, #32]	@ (80001f0 <configureIO+0x28>)
 80001d0:	601a      	str	r2, [r3, #0]
	GPIOB -> CRH = 0x44444844; //input pull-down/up. B10
 80001d2:	4b08      	ldr	r3, [pc, #32]	@ (80001f4 <configureIO+0x2c>)
 80001d4:	4a08      	ldr	r2, [pc, #32]	@ (80001f8 <configureIO+0x30>)
 80001d6:	605a      	str	r2, [r3, #4]
	GPIOB->ODR &= ~(1 << 10);
 80001d8:	4b06      	ldr	r3, [pc, #24]	@ (80001f4 <configureIO+0x2c>)
 80001da:	68db      	ldr	r3, [r3, #12]
 80001dc:	4a05      	ldr	r2, [pc, #20]	@ (80001f4 <configureIO+0x2c>)
 80001de:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80001e2:	60d3      	str	r3, [r2, #12]
}
 80001e4:	bf00      	nop
 80001e6:	46bd      	mov	sp, r7
 80001e8:	bc80      	pop	{r7}
 80001ea:	4770      	bx	lr
 80001ec:	40010800 	.word	0x40010800
 80001f0:	44444422 	.word	0x44444422
 80001f4:	40010c00 	.word	0x40010c00
 80001f8:	44444844 	.word	0x44444844

080001fc <enableClk>:

void enableClk(){
 80001fc:	b480      	push	{r7}
 80001fe:	af00      	add	r7, sp, #0
	RCC -> APB2ENR |= RCC_APB2ENR_IOPAEN;
 8000200:	4b07      	ldr	r3, [pc, #28]	@ (8000220 <enableClk+0x24>)
 8000202:	699b      	ldr	r3, [r3, #24]
 8000204:	4a06      	ldr	r2, [pc, #24]	@ (8000220 <enableClk+0x24>)
 8000206:	f043 0304 	orr.w	r3, r3, #4
 800020a:	6193      	str	r3, [r2, #24]
	RCC -> APB2ENR |= RCC_APB2ENR_IOPBEN;
 800020c:	4b04      	ldr	r3, [pc, #16]	@ (8000220 <enableClk+0x24>)
 800020e:	699b      	ldr	r3, [r3, #24]
 8000210:	4a03      	ldr	r2, [pc, #12]	@ (8000220 <enableClk+0x24>)
 8000212:	f043 0308 	orr.w	r3, r3, #8
 8000216:	6193      	str	r3, [r2, #24]
}
 8000218:	bf00      	nop
 800021a:	46bd      	mov	sp, r7
 800021c:	bc80      	pop	{r7}
 800021e:	4770      	bx	lr
 8000220:	40021000 	.word	0x40021000

08000224 <light>:


void light (char i){
 8000224:	b480      	push	{r7}
 8000226:	b083      	sub	sp, #12
 8000228:	af00      	add	r7, sp, #0
 800022a:	4603      	mov	r3, r0
 800022c:	71fb      	strb	r3, [r7, #7]

	switch (i){
 800022e:	79fb      	ldrb	r3, [r7, #7]
 8000230:	2b01      	cmp	r3, #1
 8000232:	d002      	beq.n	800023a <light+0x16>
 8000234:	2b02      	cmp	r3, #2
 8000236:	d007      	beq.n	8000248 <light+0x24>
			case 1: GPIOA -> ODR |= 1 << 0;   break; //A0
			case 2: GPIOA -> ODR |= 1 << 1;  break; //A1
			default: break;
 8000238:	e00d      	b.n	8000256 <light+0x32>
			case 1: GPIOA -> ODR |= 1 << 0;   break; //A0
 800023a:	4b09      	ldr	r3, [pc, #36]	@ (8000260 <light+0x3c>)
 800023c:	68db      	ldr	r3, [r3, #12]
 800023e:	4a08      	ldr	r2, [pc, #32]	@ (8000260 <light+0x3c>)
 8000240:	f043 0301 	orr.w	r3, r3, #1
 8000244:	60d3      	str	r3, [r2, #12]
 8000246:	e006      	b.n	8000256 <light+0x32>
			case 2: GPIOA -> ODR |= 1 << 1;  break; //A1
 8000248:	4b05      	ldr	r3, [pc, #20]	@ (8000260 <light+0x3c>)
 800024a:	68db      	ldr	r3, [r3, #12]
 800024c:	4a04      	ldr	r2, [pc, #16]	@ (8000260 <light+0x3c>)
 800024e:	f043 0302 	orr.w	r3, r3, #2
 8000252:	60d3      	str	r3, [r2, #12]
 8000254:	bf00      	nop
		}

}
 8000256:	bf00      	nop
 8000258:	370c      	adds	r7, #12
 800025a:	46bd      	mov	sp, r7
 800025c:	bc80      	pop	{r7}
 800025e:	4770      	bx	lr
 8000260:	40010800 	.word	0x40010800

08000264 <HAL_MspInit>:
 8000264:	b480      	push	{r7}
 8000266:	b083      	sub	sp, #12
 8000268:	af00      	add	r7, sp, #0
 800026a:	4b0e      	ldr	r3, [pc, #56]	@ (80002a4 <HAL_MspInit+0x40>)
 800026c:	699b      	ldr	r3, [r3, #24]
 800026e:	4a0d      	ldr	r2, [pc, #52]	@ (80002a4 <HAL_MspInit+0x40>)
 8000270:	f043 0301 	orr.w	r3, r3, #1
 8000274:	6193      	str	r3, [r2, #24]
 8000276:	4b0b      	ldr	r3, [pc, #44]	@ (80002a4 <HAL_MspInit+0x40>)
 8000278:	699b      	ldr	r3, [r3, #24]
 800027a:	f003 0301 	and.w	r3, r3, #1
 800027e:	607b      	str	r3, [r7, #4]
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4b08      	ldr	r3, [pc, #32]	@ (80002a4 <HAL_MspInit+0x40>)
 8000284:	69db      	ldr	r3, [r3, #28]
 8000286:	4a07      	ldr	r2, [pc, #28]	@ (80002a4 <HAL_MspInit+0x40>)
 8000288:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800028c:	61d3      	str	r3, [r2, #28]
 800028e:	4b05      	ldr	r3, [pc, #20]	@ (80002a4 <HAL_MspInit+0x40>)
 8000290:	69db      	ldr	r3, [r3, #28]
 8000292:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8000296:	603b      	str	r3, [r7, #0]
 8000298:	683b      	ldr	r3, [r7, #0]
 800029a:	bf00      	nop
 800029c:	370c      	adds	r7, #12
 800029e:	46bd      	mov	sp, r7
 80002a0:	bc80      	pop	{r7}
 80002a2:	4770      	bx	lr
 80002a4:	40021000 	.word	0x40021000

080002a8 <NMI_Handler>:
 80002a8:	b480      	push	{r7}
 80002aa:	af00      	add	r7, sp, #0
 80002ac:	bf00      	nop
 80002ae:	e7fd      	b.n	80002ac <NMI_Handler+0x4>

080002b0 <HardFault_Handler>:
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	bf00      	nop
 80002b6:	e7fd      	b.n	80002b4 <HardFault_Handler+0x4>

080002b8 <MemManage_Handler>:
 80002b8:	b480      	push	{r7}
 80002ba:	af00      	add	r7, sp, #0
 80002bc:	bf00      	nop
 80002be:	e7fd      	b.n	80002bc <MemManage_Handler+0x4>

080002c0 <BusFault_Handler>:
 80002c0:	b480      	push	{r7}
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	bf00      	nop
 80002c6:	e7fd      	b.n	80002c4 <BusFault_Handler+0x4>

080002c8 <UsageFault_Handler>:
 80002c8:	b480      	push	{r7}
 80002ca:	af00      	add	r7, sp, #0
 80002cc:	bf00      	nop
 80002ce:	e7fd      	b.n	80002cc <UsageFault_Handler+0x4>

080002d0 <SVC_Handler>:
 80002d0:	b480      	push	{r7}
 80002d2:	af00      	add	r7, sp, #0
 80002d4:	bf00      	nop
 80002d6:	46bd      	mov	sp, r7
 80002d8:	bc80      	pop	{r7}
 80002da:	4770      	bx	lr

080002dc <DebugMon_Handler>:
 80002dc:	b480      	push	{r7}
 80002de:	af00      	add	r7, sp, #0
 80002e0:	bf00      	nop
 80002e2:	46bd      	mov	sp, r7
 80002e4:	bc80      	pop	{r7}
 80002e6:	4770      	bx	lr

080002e8 <PendSV_Handler>:
 80002e8:	b480      	push	{r7}
 80002ea:	af00      	add	r7, sp, #0
 80002ec:	bf00      	nop
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bc80      	pop	{r7}
 80002f2:	4770      	bx	lr

080002f4 <SysTick_Handler>:
 80002f4:	b580      	push	{r7, lr}
 80002f6:	af00      	add	r7, sp, #0
 80002f8:	f000 f874 	bl	80003e4 <HAL_IncTick>
 80002fc:	bf00      	nop
 80002fe:	bd80      	pop	{r7, pc}

08000300 <SystemInit>:
 8000300:	b480      	push	{r7}
 8000302:	af00      	add	r7, sp, #0
 8000304:	bf00      	nop
 8000306:	46bd      	mov	sp, r7
 8000308:	bc80      	pop	{r7}
 800030a:	4770      	bx	lr

0800030c <Reset_Handler>:
 800030c:	f7ff fff8 	bl	8000300 <SystemInit>
 8000310:	480b      	ldr	r0, [pc, #44]	@ (8000340 <LoopFillZerobss+0xe>)
 8000312:	490c      	ldr	r1, [pc, #48]	@ (8000344 <LoopFillZerobss+0x12>)
 8000314:	4a0c      	ldr	r2, [pc, #48]	@ (8000348 <LoopFillZerobss+0x16>)
 8000316:	2300      	movs	r3, #0
 8000318:	e002      	b.n	8000320 <LoopCopyDataInit>

0800031a <CopyDataInit>:
 800031a:	58d4      	ldr	r4, [r2, r3]
 800031c:	50c4      	str	r4, [r0, r3]
 800031e:	3304      	adds	r3, #4

08000320 <LoopCopyDataInit>:
 8000320:	18c4      	adds	r4, r0, r3
 8000322:	428c      	cmp	r4, r1
 8000324:	d3f9      	bcc.n	800031a <CopyDataInit>
 8000326:	4a09      	ldr	r2, [pc, #36]	@ (800034c <LoopFillZerobss+0x1a>)
 8000328:	4c09      	ldr	r4, [pc, #36]	@ (8000350 <LoopFillZerobss+0x1e>)
 800032a:	2300      	movs	r3, #0
 800032c:	e001      	b.n	8000332 <LoopFillZerobss>

0800032e <FillZerobss>:
 800032e:	6013      	str	r3, [r2, #0]
 8000330:	3204      	adds	r2, #4

08000332 <LoopFillZerobss>:
 8000332:	42a2      	cmp	r2, r4
 8000334:	d3fb      	bcc.n	800032e <FillZerobss>
 8000336:	f000 f979 	bl	800062c <__libc_init_array>
 800033a:	f7ff ff07 	bl	800014c <main>
 800033e:	4770      	bx	lr
 8000340:	20000000 	.word	0x20000000
 8000344:	2000000c 	.word	0x2000000c
 8000348:	08000694 	.word	0x08000694
 800034c:	2000000c 	.word	0x2000000c
 8000350:	2000002c 	.word	0x2000002c

08000354 <ADC1_2_IRQHandler>:
 8000354:	e7fe      	b.n	8000354 <ADC1_2_IRQHandler>
	...

08000358 <HAL_Init>:
 8000358:	b580      	push	{r7, lr}
 800035a:	af00      	add	r7, sp, #0
 800035c:	4b08      	ldr	r3, [pc, #32]	@ (8000380 <HAL_Init+0x28>)
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	4a07      	ldr	r2, [pc, #28]	@ (8000380 <HAL_Init+0x28>)
 8000362:	f043 0310 	orr.w	r3, r3, #16
 8000366:	6013      	str	r3, [r2, #0]
 8000368:	2003      	movs	r0, #3
 800036a:	f000 f92b 	bl	80005c4 <HAL_NVIC_SetPriorityGrouping>
 800036e:	200f      	movs	r0, #15
 8000370:	f000 f808 	bl	8000384 <HAL_InitTick>
 8000374:	f7ff ff76 	bl	8000264 <HAL_MspInit>
 8000378:	2300      	movs	r3, #0
 800037a:	4618      	mov	r0, r3
 800037c:	bd80      	pop	{r7, pc}
 800037e:	bf00      	nop
 8000380:	40022000 	.word	0x40022000

08000384 <HAL_InitTick>:
 8000384:	b580      	push	{r7, lr}
 8000386:	b082      	sub	sp, #8
 8000388:	af00      	add	r7, sp, #0
 800038a:	6078      	str	r0, [r7, #4]
 800038c:	4b12      	ldr	r3, [pc, #72]	@ (80003d8 <HAL_InitTick+0x54>)
 800038e:	681a      	ldr	r2, [r3, #0]
 8000390:	4b12      	ldr	r3, [pc, #72]	@ (80003dc <HAL_InitTick+0x58>)
 8000392:	781b      	ldrb	r3, [r3, #0]
 8000394:	4619      	mov	r1, r3
 8000396:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800039a:	fbb3 f3f1 	udiv	r3, r3, r1
 800039e:	fbb2 f3f3 	udiv	r3, r2, r3
 80003a2:	4618      	mov	r0, r3
 80003a4:	f000 f935 	bl	8000612 <HAL_SYSTICK_Config>
 80003a8:	4603      	mov	r3, r0
 80003aa:	2b00      	cmp	r3, #0
 80003ac:	d001      	beq.n	80003b2 <HAL_InitTick+0x2e>
 80003ae:	2301      	movs	r3, #1
 80003b0:	e00e      	b.n	80003d0 <HAL_InitTick+0x4c>
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	2b0f      	cmp	r3, #15
 80003b6:	d80a      	bhi.n	80003ce <HAL_InitTick+0x4a>
 80003b8:	2200      	movs	r2, #0
 80003ba:	6879      	ldr	r1, [r7, #4]
 80003bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80003c0:	f000 f90b 	bl	80005da <HAL_NVIC_SetPriority>
 80003c4:	4a06      	ldr	r2, [pc, #24]	@ (80003e0 <HAL_InitTick+0x5c>)
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	6013      	str	r3, [r2, #0]
 80003ca:	2300      	movs	r3, #0
 80003cc:	e000      	b.n	80003d0 <HAL_InitTick+0x4c>
 80003ce:	2301      	movs	r3, #1
 80003d0:	4618      	mov	r0, r3
 80003d2:	3708      	adds	r7, #8
 80003d4:	46bd      	mov	sp, r7
 80003d6:	bd80      	pop	{r7, pc}
 80003d8:	20000000 	.word	0x20000000
 80003dc:	20000008 	.word	0x20000008
 80003e0:	20000004 	.word	0x20000004

080003e4 <HAL_IncTick>:
 80003e4:	b480      	push	{r7}
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	4b05      	ldr	r3, [pc, #20]	@ (8000400 <HAL_IncTick+0x1c>)
 80003ea:	781b      	ldrb	r3, [r3, #0]
 80003ec:	461a      	mov	r2, r3
 80003ee:	4b05      	ldr	r3, [pc, #20]	@ (8000404 <HAL_IncTick+0x20>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	4413      	add	r3, r2
 80003f4:	4a03      	ldr	r2, [pc, #12]	@ (8000404 <HAL_IncTick+0x20>)
 80003f6:	6013      	str	r3, [r2, #0]
 80003f8:	bf00      	nop
 80003fa:	46bd      	mov	sp, r7
 80003fc:	bc80      	pop	{r7}
 80003fe:	4770      	bx	lr
 8000400:	20000008 	.word	0x20000008
 8000404:	20000028 	.word	0x20000028

08000408 <HAL_GetTick>:
 8000408:	b480      	push	{r7}
 800040a:	af00      	add	r7, sp, #0
 800040c:	4b02      	ldr	r3, [pc, #8]	@ (8000418 <HAL_GetTick+0x10>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	4618      	mov	r0, r3
 8000412:	46bd      	mov	sp, r7
 8000414:	bc80      	pop	{r7}
 8000416:	4770      	bx	lr
 8000418:	20000028 	.word	0x20000028

0800041c <HAL_Delay>:
 800041c:	b580      	push	{r7, lr}
 800041e:	b084      	sub	sp, #16
 8000420:	af00      	add	r7, sp, #0
 8000422:	6078      	str	r0, [r7, #4]
 8000424:	f7ff fff0 	bl	8000408 <HAL_GetTick>
 8000428:	60b8      	str	r0, [r7, #8]
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	60fb      	str	r3, [r7, #12]
 800042e:	68fb      	ldr	r3, [r7, #12]
 8000430:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8000434:	d005      	beq.n	8000442 <HAL_Delay+0x26>
 8000436:	4b0a      	ldr	r3, [pc, #40]	@ (8000460 <HAL_Delay+0x44>)
 8000438:	781b      	ldrb	r3, [r3, #0]
 800043a:	461a      	mov	r2, r3
 800043c:	68fb      	ldr	r3, [r7, #12]
 800043e:	4413      	add	r3, r2
 8000440:	60fb      	str	r3, [r7, #12]
 8000442:	bf00      	nop
 8000444:	f7ff ffe0 	bl	8000408 <HAL_GetTick>
 8000448:	4602      	mov	r2, r0
 800044a:	68bb      	ldr	r3, [r7, #8]
 800044c:	1ad3      	subs	r3, r2, r3
 800044e:	68fa      	ldr	r2, [r7, #12]
 8000450:	429a      	cmp	r2, r3
 8000452:	d8f7      	bhi.n	8000444 <HAL_Delay+0x28>
 8000454:	bf00      	nop
 8000456:	bf00      	nop
 8000458:	3710      	adds	r7, #16
 800045a:	46bd      	mov	sp, r7
 800045c:	bd80      	pop	{r7, pc}
 800045e:	bf00      	nop
 8000460:	20000008 	.word	0x20000008

08000464 <__NVIC_SetPriorityGrouping>:
 8000464:	b480      	push	{r7}
 8000466:	b085      	sub	sp, #20
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	f003 0307 	and.w	r3, r3, #7
 8000472:	60fb      	str	r3, [r7, #12]
 8000474:	4b0c      	ldr	r3, [pc, #48]	@ (80004a8 <__NVIC_SetPriorityGrouping+0x44>)
 8000476:	68db      	ldr	r3, [r3, #12]
 8000478:	60bb      	str	r3, [r7, #8]
 800047a:	68ba      	ldr	r2, [r7, #8]
 800047c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000480:	4013      	ands	r3, r2
 8000482:	60bb      	str	r3, [r7, #8]
 8000484:	68fb      	ldr	r3, [r7, #12]
 8000486:	021a      	lsls	r2, r3, #8
 8000488:	68bb      	ldr	r3, [r7, #8]
 800048a:	4313      	orrs	r3, r2
 800048c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000490:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000494:	60bb      	str	r3, [r7, #8]
 8000496:	4a04      	ldr	r2, [pc, #16]	@ (80004a8 <__NVIC_SetPriorityGrouping+0x44>)
 8000498:	68bb      	ldr	r3, [r7, #8]
 800049a:	60d3      	str	r3, [r2, #12]
 800049c:	bf00      	nop
 800049e:	3714      	adds	r7, #20
 80004a0:	46bd      	mov	sp, r7
 80004a2:	bc80      	pop	{r7}
 80004a4:	4770      	bx	lr
 80004a6:	bf00      	nop
 80004a8:	e000ed00 	.word	0xe000ed00

080004ac <__NVIC_GetPriorityGrouping>:
 80004ac:	b480      	push	{r7}
 80004ae:	af00      	add	r7, sp, #0
 80004b0:	4b04      	ldr	r3, [pc, #16]	@ (80004c4 <__NVIC_GetPriorityGrouping+0x18>)
 80004b2:	68db      	ldr	r3, [r3, #12]
 80004b4:	0a1b      	lsrs	r3, r3, #8
 80004b6:	f003 0307 	and.w	r3, r3, #7
 80004ba:	4618      	mov	r0, r3
 80004bc:	46bd      	mov	sp, r7
 80004be:	bc80      	pop	{r7}
 80004c0:	4770      	bx	lr
 80004c2:	bf00      	nop
 80004c4:	e000ed00 	.word	0xe000ed00

080004c8 <__NVIC_SetPriority>:
 80004c8:	b480      	push	{r7}
 80004ca:	b083      	sub	sp, #12
 80004cc:	af00      	add	r7, sp, #0
 80004ce:	4603      	mov	r3, r0
 80004d0:	6039      	str	r1, [r7, #0]
 80004d2:	71fb      	strb	r3, [r7, #7]
 80004d4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004d8:	2b00      	cmp	r3, #0
 80004da:	db0a      	blt.n	80004f2 <__NVIC_SetPriority+0x2a>
 80004dc:	683b      	ldr	r3, [r7, #0]
 80004de:	b2da      	uxtb	r2, r3
 80004e0:	490c      	ldr	r1, [pc, #48]	@ (8000514 <__NVIC_SetPriority+0x4c>)
 80004e2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80004e6:	0112      	lsls	r2, r2, #4
 80004e8:	b2d2      	uxtb	r2, r2
 80004ea:	440b      	add	r3, r1
 80004ec:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80004f0:	e00a      	b.n	8000508 <__NVIC_SetPriority+0x40>
 80004f2:	683b      	ldr	r3, [r7, #0]
 80004f4:	b2da      	uxtb	r2, r3
 80004f6:	4908      	ldr	r1, [pc, #32]	@ (8000518 <__NVIC_SetPriority+0x50>)
 80004f8:	79fb      	ldrb	r3, [r7, #7]
 80004fa:	f003 030f 	and.w	r3, r3, #15
 80004fe:	3b04      	subs	r3, #4
 8000500:	0112      	lsls	r2, r2, #4
 8000502:	b2d2      	uxtb	r2, r2
 8000504:	440b      	add	r3, r1
 8000506:	761a      	strb	r2, [r3, #24]
 8000508:	bf00      	nop
 800050a:	370c      	adds	r7, #12
 800050c:	46bd      	mov	sp, r7
 800050e:	bc80      	pop	{r7}
 8000510:	4770      	bx	lr
 8000512:	bf00      	nop
 8000514:	e000e100 	.word	0xe000e100
 8000518:	e000ed00 	.word	0xe000ed00

0800051c <NVIC_EncodePriority>:
 800051c:	b480      	push	{r7}
 800051e:	b089      	sub	sp, #36	@ 0x24
 8000520:	af00      	add	r7, sp, #0
 8000522:	60f8      	str	r0, [r7, #12]
 8000524:	60b9      	str	r1, [r7, #8]
 8000526:	607a      	str	r2, [r7, #4]
 8000528:	68fb      	ldr	r3, [r7, #12]
 800052a:	f003 0307 	and.w	r3, r3, #7
 800052e:	61fb      	str	r3, [r7, #28]
 8000530:	69fb      	ldr	r3, [r7, #28]
 8000532:	f1c3 0307 	rsb	r3, r3, #7
 8000536:	2b04      	cmp	r3, #4
 8000538:	bf28      	it	cs
 800053a:	2304      	movcs	r3, #4
 800053c:	61bb      	str	r3, [r7, #24]
 800053e:	69fb      	ldr	r3, [r7, #28]
 8000540:	3304      	adds	r3, #4
 8000542:	2b06      	cmp	r3, #6
 8000544:	d902      	bls.n	800054c <NVIC_EncodePriority+0x30>
 8000546:	69fb      	ldr	r3, [r7, #28]
 8000548:	3b03      	subs	r3, #3
 800054a:	e000      	b.n	800054e <NVIC_EncodePriority+0x32>
 800054c:	2300      	movs	r3, #0
 800054e:	617b      	str	r3, [r7, #20]
 8000550:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000554:	69bb      	ldr	r3, [r7, #24]
 8000556:	fa02 f303 	lsl.w	r3, r2, r3
 800055a:	43da      	mvns	r2, r3
 800055c:	68bb      	ldr	r3, [r7, #8]
 800055e:	401a      	ands	r2, r3
 8000560:	697b      	ldr	r3, [r7, #20]
 8000562:	409a      	lsls	r2, r3
 8000564:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8000568:	697b      	ldr	r3, [r7, #20]
 800056a:	fa01 f303 	lsl.w	r3, r1, r3
 800056e:	43d9      	mvns	r1, r3
 8000570:	687b      	ldr	r3, [r7, #4]
 8000572:	400b      	ands	r3, r1
 8000574:	4313      	orrs	r3, r2
 8000576:	4618      	mov	r0, r3
 8000578:	3724      	adds	r7, #36	@ 0x24
 800057a:	46bd      	mov	sp, r7
 800057c:	bc80      	pop	{r7}
 800057e:	4770      	bx	lr

08000580 <SysTick_Config>:
 8000580:	b580      	push	{r7, lr}
 8000582:	b082      	sub	sp, #8
 8000584:	af00      	add	r7, sp, #0
 8000586:	6078      	str	r0, [r7, #4]
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	3b01      	subs	r3, #1
 800058c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000590:	d301      	bcc.n	8000596 <SysTick_Config+0x16>
 8000592:	2301      	movs	r3, #1
 8000594:	e00f      	b.n	80005b6 <SysTick_Config+0x36>
 8000596:	4a0a      	ldr	r2, [pc, #40]	@ (80005c0 <SysTick_Config+0x40>)
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	3b01      	subs	r3, #1
 800059c:	6053      	str	r3, [r2, #4]
 800059e:	210f      	movs	r1, #15
 80005a0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80005a4:	f7ff ff90 	bl	80004c8 <__NVIC_SetPriority>
 80005a8:	4b05      	ldr	r3, [pc, #20]	@ (80005c0 <SysTick_Config+0x40>)
 80005aa:	2200      	movs	r2, #0
 80005ac:	609a      	str	r2, [r3, #8]
 80005ae:	4b04      	ldr	r3, [pc, #16]	@ (80005c0 <SysTick_Config+0x40>)
 80005b0:	2207      	movs	r2, #7
 80005b2:	601a      	str	r2, [r3, #0]
 80005b4:	2300      	movs	r3, #0
 80005b6:	4618      	mov	r0, r3
 80005b8:	3708      	adds	r7, #8
 80005ba:	46bd      	mov	sp, r7
 80005bc:	bd80      	pop	{r7, pc}
 80005be:	bf00      	nop
 80005c0:	e000e010 	.word	0xe000e010

080005c4 <HAL_NVIC_SetPriorityGrouping>:
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b082      	sub	sp, #8
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
 80005cc:	6878      	ldr	r0, [r7, #4]
 80005ce:	f7ff ff49 	bl	8000464 <__NVIC_SetPriorityGrouping>
 80005d2:	bf00      	nop
 80005d4:	3708      	adds	r7, #8
 80005d6:	46bd      	mov	sp, r7
 80005d8:	bd80      	pop	{r7, pc}

080005da <HAL_NVIC_SetPriority>:
 80005da:	b580      	push	{r7, lr}
 80005dc:	b086      	sub	sp, #24
 80005de:	af00      	add	r7, sp, #0
 80005e0:	4603      	mov	r3, r0
 80005e2:	60b9      	str	r1, [r7, #8]
 80005e4:	607a      	str	r2, [r7, #4]
 80005e6:	73fb      	strb	r3, [r7, #15]
 80005e8:	2300      	movs	r3, #0
 80005ea:	617b      	str	r3, [r7, #20]
 80005ec:	f7ff ff5e 	bl	80004ac <__NVIC_GetPriorityGrouping>
 80005f0:	6178      	str	r0, [r7, #20]
 80005f2:	687a      	ldr	r2, [r7, #4]
 80005f4:	68b9      	ldr	r1, [r7, #8]
 80005f6:	6978      	ldr	r0, [r7, #20]
 80005f8:	f7ff ff90 	bl	800051c <NVIC_EncodePriority>
 80005fc:	4602      	mov	r2, r0
 80005fe:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000602:	4611      	mov	r1, r2
 8000604:	4618      	mov	r0, r3
 8000606:	f7ff ff5f 	bl	80004c8 <__NVIC_SetPriority>
 800060a:	bf00      	nop
 800060c:	3718      	adds	r7, #24
 800060e:	46bd      	mov	sp, r7
 8000610:	bd80      	pop	{r7, pc}

08000612 <HAL_SYSTICK_Config>:
 8000612:	b580      	push	{r7, lr}
 8000614:	b082      	sub	sp, #8
 8000616:	af00      	add	r7, sp, #0
 8000618:	6078      	str	r0, [r7, #4]
 800061a:	6878      	ldr	r0, [r7, #4]
 800061c:	f7ff ffb0 	bl	8000580 <SysTick_Config>
 8000620:	4603      	mov	r3, r0
 8000622:	4618      	mov	r0, r3
 8000624:	3708      	adds	r7, #8
 8000626:	46bd      	mov	sp, r7
 8000628:	bd80      	pop	{r7, pc}
	...

0800062c <__libc_init_array>:
 800062c:	b570      	push	{r4, r5, r6, lr}
 800062e:	2600      	movs	r6, #0
 8000630:	4d0c      	ldr	r5, [pc, #48]	@ (8000664 <__libc_init_array+0x38>)
 8000632:	4c0d      	ldr	r4, [pc, #52]	@ (8000668 <__libc_init_array+0x3c>)
 8000634:	1b64      	subs	r4, r4, r5
 8000636:	10a4      	asrs	r4, r4, #2
 8000638:	42a6      	cmp	r6, r4
 800063a:	d109      	bne.n	8000650 <__libc_init_array+0x24>
 800063c:	f000 f81a 	bl	8000674 <_init>
 8000640:	2600      	movs	r6, #0
 8000642:	4d0a      	ldr	r5, [pc, #40]	@ (800066c <__libc_init_array+0x40>)
 8000644:	4c0a      	ldr	r4, [pc, #40]	@ (8000670 <__libc_init_array+0x44>)
 8000646:	1b64      	subs	r4, r4, r5
 8000648:	10a4      	asrs	r4, r4, #2
 800064a:	42a6      	cmp	r6, r4
 800064c:	d105      	bne.n	800065a <__libc_init_array+0x2e>
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f855 3b04 	ldr.w	r3, [r5], #4
 8000654:	4798      	blx	r3
 8000656:	3601      	adds	r6, #1
 8000658:	e7ee      	b.n	8000638 <__libc_init_array+0xc>
 800065a:	f855 3b04 	ldr.w	r3, [r5], #4
 800065e:	4798      	blx	r3
 8000660:	3601      	adds	r6, #1
 8000662:	e7f2      	b.n	800064a <__libc_init_array+0x1e>
 8000664:	0800068c 	.word	0x0800068c
 8000668:	0800068c 	.word	0x0800068c
 800066c:	0800068c 	.word	0x0800068c
 8000670:	08000690 	.word	0x08000690

08000674 <_init>:
 8000674:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000676:	bf00      	nop
 8000678:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800067a:	bc08      	pop	{r3}
 800067c:	469e      	mov	lr, r3
 800067e:	4770      	bx	lr

08000680 <_fini>:
 8000680:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000682:	bf00      	nop
 8000684:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000686:	bc08      	pop	{r3}
 8000688:	469e      	mov	lr, r3
 800068a:	4770      	bx	lr
